apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: service-cluster-template
  title: Kubernetes Cluster
  description: Provision a Kubernetes cluster using Crossplane
  tags:
    - crossplane
    - kubernetes
    - cluster
    - infrastructure
spec:
  owner: group:open-service-portal
  type: resource
  
  parameters:
    - title: Cluster Configuration
      required:
        - name
        - version
      properties:
        name:
          title: Cluster Name
          type: string
          description: Unique name for your Kubernetes cluster
          pattern: '^[a-z]([-a-z0-9]*[a-z0-9])?$'
          ui:autofocus: true
        namespace:
          title: Namespace
          type: string
          description: Kubernetes namespace for the cluster resources
          default: default
        nodeSize:
          title: Node Size
          type: string
          description: Size of cluster nodes
          default: medium
          enum:
            - small
            - medium
            - large
          enumNames:
            - Small (2 vCPU, 4GB RAM)
            - Medium (4 vCPU, 8GB RAM)
            - Large (8 vCPU, 16GB RAM)
        nodeCount:
          title: Node Count
          type: integer
          description: Number of nodes in the cluster
          default: 3
          minimum: 3
          maximum: 100
        storageSize:
          title: Storage Size (GB)
          type: integer
          description: Storage size per node in GB
          default: 10
          minimum: 1
          maximum: 100
        version:
          title: Kubernetes Version
          type: string
          description: Kubernetes version to deploy
          default: "1.31.1"
          enum:
            - "1.31.1"
            - "1.30.5"
            - "1.29.9"
            - "1.29.4"
            - "1.29.2"
            - "1.29.1"
            - "1.29.0"
            - "1.28.14"
            - "1.28.9"
        cloudProvider:
          title: Cloud Provider
          type: string
          description: Cloud provider for the cluster
          default: azure
          enum:
            - aws
            - azure
            - gcp
            - onprem
        owner:
          title: Owner
          type: string
          description: Owner of the cluster
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind: Group
    
    - title: Repository Location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
            allowedOwners:
              - open-service-portal
  
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
          namespace: ${{ parameters.namespace }}
          nodeSize: ${{ parameters.nodeSize }}
          nodeCount: ${{ parameters.nodeCount }}
          storageSize: ${{ parameters.storageSize }}
          version: ${{ parameters.version }}
          cloudProvider: ${{ parameters.cloudProvider }}
          owner: ${{ parameters.owner }}
          repoUrl: ${{ parameters.repoUrl }}
    
    - id: publish
      name: Publish to GitHub
      action: publish:github
      input:
        description: Kubernetes cluster configuration for ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main
        gitCommitMessage: 'feat: add Kubernetes cluster ${{ parameters.name }}'
        topics:
          - crossplane
          - kubernetes
          - infrastructure
    
    - id: register
      name: Register in Catalog
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'
  
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}